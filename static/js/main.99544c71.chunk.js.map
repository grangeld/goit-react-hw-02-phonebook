{"version":3,"sources":["component/ContactForm/ContactForm.jsx","component/ContactList/ContactList.jsx","component/Filter/Filter.jsx","component/App.js","index.js","component/ContactForm/contactForm.module.css","component/app.module.css"],"names":["ContactForm","onAddContact","onSubmit","event","preventDefault","possible","id","Date","charAt","Math","floor","random","length","target","name","value","number","className","s","decor","label","type","required","buttonSubmit","ContactList","phoneList","onDelete","map","data","onClick","Filter","onFilter","onChange","App","useState","contacts","setContacts","filter","setFilter","normalizedFilter","toLowerCase","filterList","includes","heading","contact","e","alert","currentTarget","newContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0PA8CeA,EA3CK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAsBrB,OACE,uBAAMC,SAtBa,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EACJ,ulBACIC,GACH,IAAIC,KACLF,EAASG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWN,EAASO,SACtB,KAA5BT,EAAMU,OAAOC,KAAKC,OAEpBd,EAAa,CACXK,KACAQ,KAAMX,EAAMU,OAAOC,KAAKC,MACxBC,OAAQb,EAAMU,OAAOG,OAAOD,UAG9BZ,EAAMU,OAAOC,KAAKC,MAAQ,GAC1BZ,EAAMU,OAAOG,OAAOD,MAAQ,KAKAE,UAAWC,IAAEC,MAA3C,UACE,wBAAOF,UAAWC,IAAEE,MAApB,iBAEE,uBAAOC,KAAK,OAAOP,KAAK,OAAOQ,UAAQ,OAGzC,wBAAOL,UAAWC,IAAEE,MAApB,mBAEE,uBAAOC,KAAK,OAAOP,KAAK,SAASQ,UAAQ,OAG3C,uBAAOD,KAAK,SAASN,MAAM,cAAcE,UAAWC,IAAEK,mBCX7CC,EAxBK,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAChC,OACE,6BACGD,EAAUE,KAAI,SAAAC,GAAI,OACjB,+BACGA,EAAKd,KADR,KACgBc,EAAKZ,OACnB,wBAAQa,QAAS,kBAAMH,EAASE,EAAKtB,KAArC,sBAFOsB,EAAKtB,UCSPwB,EAbA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,0DAEE,uBAAOV,KAAK,OAAOP,KAAK,OAAOkB,SAAUD,Q,gBC6ChCE,MA7Cf,WAAgB,IAAD,EACmBC,mBAAS,CACvC,CAAE5B,GAAI,OAAQQ,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEV,GAAI,OAAQQ,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEV,GAAI,OAAQQ,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEV,GAAI,OAAQQ,KAAM,iBAAkBE,OAAQ,eALnC,mBACNmB,EADM,KACIC,EADJ,OAOeF,mBAAS,IAPxB,mBAONG,EAPM,KAOEC,EAPF,KAmBPC,EAAmBF,EAAOG,cAC1BC,EAAaN,EAASE,QAAO,YACjC,OAD+C,EAAXvB,KACxB0B,cAAcE,SAASH,MAYrC,OACE,gCACE,oBAAItB,UAAWC,IAAEyB,QAAjB,uBACA,cAAC,EAAD,CAAa1C,aA3BI,SAAA2C,GAEnB,OAAKT,EAASE,QAAO,SAAAQ,GAAC,OAAIA,EAAE/B,OAAS8B,EAAQ9B,QAAMF,OAAS,GAC1DwB,EAAY,GAAD,mBAAKD,GAAL,CAAeS,MACnB,IAETE,MAAM,GAAD,OAAIF,EAAQ9B,KAAZ,6BACE,MAsBL,0CACA,cAAC,EAAD,CAAQiB,SAfQ,SAAA5B,GAClBmC,EAAUnC,EAAM4C,cAAchC,UAe5B,cAAC,EAAD,CAAaU,UAAWgB,EAAYf,SAZvB,SAAApB,GACf,IAAM0C,EAAcb,EAASE,QAAO,SAAAO,GAAO,OAAIA,EAAQtC,KAAOA,KAC9D8B,EAAYY,UC/BhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,MAAQ,2BAA2B,aAAe,oC,kBCAvGD,EAAOC,QAAU,CAAC,QAAU,wB","file":"static/js/main.99544c71.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './contactForm.module.css';\n\nconst ContactForm = ({ onAddContact }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    //рандомный id\n    const possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz×ℂ℃℄℅℆ℇ℈℉ℊℋℌℍℎℏℐℑℒℓ℔ℕ№℗℘ℙℚℛℜℝ℞℟℠℡™℣ℤ℥Ω℧ℨ℩KÅℬℭ℮ℯ ℴ⅓⅔⅕⅖⅗⅘⅙⅚⅛⅜⅝⅞⅟ℵℶ℻ℽℾℿ⅀⅁⅂⅃⅄ⅅⅆⅇⅈⅉ⅊⅋⅍ⅎⅭⅮⅯ∀∁∂∃∄∅∆∇';\n    const id =\n      +new Date() +\n      possible.charAt(Math.floor(Math.random() * possible.length));\n    if (event.target.name.value === '') return;\n    if (\n      onAddContact({\n        id,\n        name: event.target.name.value,\n        number: event.target.number.value,\n      })\n    ) {\n      event.target.name.value = '';\n      event.target.number.value = '';\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.decor}>\n      <label className={s.label}>\n        Name\n        <input type=\"text\" name=\"name\" required />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input type=\"text\" name=\"number\" required />\n      </label>\n\n      <input type=\"submit\" value=\"Add contact\" className={s.buttonSubmit} />\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst ContactList = ({ phoneList, onDelete }) => {\n  return (\n    <ul>\n      {phoneList.map(data => (\n        <li key={data.id}>\n          {data.name}: {data.number}\n          <button onClick={() => onDelete(data.id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  phoneList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ onFilter }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" name=\"name\" onChange={onFilter} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport s from './app.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  const onAddContact = contact => {\n    //Провекра, есть ли такие же имена\n    if (!contacts.filter(e => e.name === contact.name).length > 0) {\n      setContacts([...contacts, contact]);\n      return true;\n    }\n    alert(`${contact.name} is already in contacts`);\n    return false;\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const filterList = contacts.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  const onSetFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const onDelete = id => {\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(newContacts);\n  };\n\n  return (\n    <div>\n      <h1 className={s.heading}>Phonebook</h1>\n      <ContactForm onAddContact={onAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter onFilter={onSetFilter} />\n      <ContactList phoneList={filterList} onDelete={onDelete} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"decor\":\"contactForm_decor__28d1b\",\"label\":\"contactForm_label__2zD8P\",\"buttonSubmit\":\"contactForm_buttonSubmit__Ss8P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"app_heading__2QRAg\"};"],"sourceRoot":""}